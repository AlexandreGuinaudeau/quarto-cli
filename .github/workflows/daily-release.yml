name: Daily Release

on:
  workflow_dispatch:
  schedule:
    - cron: '0 1 * * *'  # every day at one am

jobs:

  configure:
    runs-on: ubuntu-latest
    outputs:
      version: ${{steps.config.outputs.version}}
      
    steps:
    - uses: actions/checkout@v2
      
    - name: config
      id: config
      run: |
        source ./configuration
        echo ::set-output name=version::$QUARTO_VERSION

  make-installer-deb:
    runs-on: ubuntu-latest
    needs: [configure]

    steps:
    - uses: actions/checkout@v2

    - name: Configure
      run: |
        ./configure-linux.sh

    - name: Prepare Distribution
      run: |
        pushd package/src/
        ./quarto-pack prepare-dist --log-level info
        popd

    - name: Make Installer
      run: |
        pushd package/src/
        ./quarto-pack make-installer-deb --log-level info
        popd

    - name: Upload Artifact 
      uses: actions/upload-artifact@v2
      with:
        name: Deb Installer
        path: ./package/out/quarto-${{needs.configure.outputs.version}}-amd64.deb
        
  make-installer-win:
    runs-on: windows-latest
    needs: [configure]

    steps:
    - uses: actions/checkout@v2

    - name: Configure
      run: |
        .\configure-windows.cmd

    - name: Prepare Distribution
      run: |
        pushd package\src\
        .\quarto-pack.cmd prepare-dist --log-level info
        popd

    - name: Make Installer
      run: |
        pushd package\src\
        .\quarto-pack.cmd make-installer-win --log-level info
        popd     
        
    - name: Upload Artifact 
      uses: actions/upload-artifact@v2
      with:
        name: Windows Installer
        path: ./package/out/quarto-${{needs.configure.outputs.version}}-win.msi
        

  make-installer-mac:
    runs-on: macos-latest
    needs: [configure]

    steps:
    - uses: actions/checkout@v2

    - name: Configure
      run: |
        ./configure-macos.sh

    - name: Prepare Distribution
      run: |
        pushd package/src/
        ./quarto-pack prepare-dist --log-level info
        popd

    - name: Make Installer
      run: |
        pushd package/src/
        ./quarto-pack make-installer-mac --log-level info
        popd
        
    - name: Upload Artifact 
      uses: actions/upload-artifact@v2
      with:
        name: Mac Installer
        path: ./package/out/quarto-${{needs.configure.outputs.version}}-macos.pkg
        
  publish-release:
    runs-on: ubuntu-latest   
    needs: [configure, make-installer-deb, make-installer-win, make-installer-mac]

    steps:
    - name: Download Artifacts
      uses: actions/download-artifact@v2       
        
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
      with:
        tag_name: v${{needs.configure.outputs.version}}-daily
        release_name: v${{needs.configure.outputs.version}} Daily
        body: |
          Daily release (v${{needs.configure.outputs.version}})
        draft: true
        prerelease: true  
        
    - name: Attach Debian Installer
      id: attach-deb-installer
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} 
        asset_path: ./Deb Installer/quarto-${{needs.configure.outputs.version}}-amd64.deb
        asset_name: quarto-${{needs.configure.outputs.version}}-amd64.deb
        asset_content_type: application/deb

    - name: Attach Windows Installer
      id: attach-win-installer
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} 
        asset_path: ./Windows Installer/quarto-${{needs.configure.outputs.version}}-win.msi
        asset_name: quarto-${{needs.configure.outputs.version}}-win.msi
        asset_content_type: application/msi

    - name: Attach Mac Installer
      id: attach-mac-installer
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} 
        asset_path: ./Mac Installer/quarto-${{needs.configure.outputs.version}}-macos.pkg
        asset_name: quarto-${{needs.configure.outputs.version}}-macos.pkg
        asset_content_type: application/pkg
        
        
              
        

