name: Create Release
on:
  schedule:
     - cron: "0 4 * * *"
  workflow_dispatch:
    inputs:
      publish-release:
        description: 'Publish Release'
        required: false
        default: 'true'
      pre-release:
        description: 'Pre-release'
        required: false
        default: 'true'
      draft:
        description: 'Draft'
        required: false
        default: 'false'
        

jobs:
  configure:
    runs-on: ubuntu-latest
    outputs:
      version: ${{steps.config.outputs.version}}
      tag_name:  v${{steps.config.outputs.version}}.${{ github.run_number }}
      release: Daily (v${{steps.config.outputs.version}} Build ${{ github.run_number }})
      changes: ${{ steps.config.outputs.changes }}  
      
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0  
     
    - name: config
      id: config
      run: |
        source ./configuration

        CHANGES= 
        # CHANGES=$(git log $(git describe --tags --abbrev=0)..HEAD --oneline)
        # Escape \n, \r to preserve multiline variable
        # See https://github.community/t/set-output-truncates-multiline-strings/16852/2
        # CHANGES="${CHANGES//'%'/'%25'}"
        # CHANGES="${CHANGES//$'\n'/'%0A'}"
        # CHANGES="${CHANGES//$'\r'/'%0D'}"
        # echo ::set-output name=changes::$CHANGES

        echo ::set-output name=version::$QUARTO_VERSION
        echo ::set-output name=changes::$CHANGES
  
  make-installer-deb:
    runs-on: ubuntu-latest
    needs: [configure]

    steps:
    - uses: actions/checkout@v2

    - name: Configure
      run: |
        ./configure-linux.sh

    - name: Prepare Distribution
      run: |
        pushd package/src/
        ./quarto-pack prepare-dist --log-level info
        popd

    - name: Make Installer
      run: |
        pushd package/src/
        ./quarto-pack make-installer-deb --log-level info
        popd

    - name: Upload Artifact 
      uses: actions/upload-artifact@v2
      with:
        name: Deb Installer
        path: ./package/out/quarto-${{needs.configure.outputs.version}}-amd64.deb
        
  make-installer-win:
    runs-on: windows-latest
    needs: [configure]

    steps:
    - uses: actions/checkout@v2

    - name: Configure
      run: |
        .\configure-windows.cmd

    - name: Prepare Distribution
      run: |
        pushd package\src\
        .\quarto-pack.cmd prepare-dist --log-level info
        popd

    - name: Make Installer
      run: |
        pushd package\src\
        .\quarto-pack.cmd make-installer-win --log-level info
        popd     
      env:
        QUARTO_WIN_PFX: ${{ secrets.WIN_PFX }}
        QUARTO_WIN_PFX_PW: ${{ secrets.WIN_PFX_PW }}   
   
    - name: Upload Artifact 
      uses: actions/upload-artifact@v2
      with:
        name: Windows Installer
        path: ./package/out/quarto-${{needs.configure.outputs.version}}-win.msi
        

  make-installer-mac:
    runs-on: macos-latest
    needs: [configure]

    steps:
    - uses: actions/checkout@v2

    - name: Configure
      run: |
        ./configure-macos.sh
        
    - uses: ./.github/workflows/actions/keychain
      with:
        certificate-value: ${{ secrets.APPLE_SIGN_P12 }}
        certificate-password: ${{ secrets.APPLE_SIGN_PW }}
        keychain: 'build.keychain'
        keychain-pw: ${{ secrets.APPLE_KEYCHAIN_PW }}
        certificate-file: certificate.p12

    - uses: ./.github/workflows/actions/keychain
      with:
        certificate-value: ${{ secrets.APPLE_SIGN_CERT }}
        certificate-password: ${{ secrets.APPLE_SIGN_PW }}
        keychain: 'build.keychain'
        keychain-pw: ${{ secrets.APPLE_KEYCHAIN_PW }}
        certificate-file: certificate.cer
        
    - name: Prepare Distribution
      run: |
        pushd package/src/
        ./quarto-pack prepare-dist --log-level info
        popd

    - name: Make Installer
      run: |
        pushd package/src/
        ./quarto-pack make-installer-mac --log-level info
        popd
      env:
        QUARTO_APPLE_APP_DEV_ID: ${{ secrets.APPLE_SIGN_ID }}
        QUARTO_APPLE_INST_DEV_ID: ${{ secrets.APPLE_SIGN_ID }}
        QUARTO_APPLE_CONNECT_UN: ${{ secrets.APPLE_CONNECT_UN }}
        QUARTO_APPLE_CONNECT_PW: ${{ secrets.APPLE_CONNECT_PW }}
        
    - name: Upload Artifact 
      uses: actions/upload-artifact@v2
      with:
        name: Mac Installer
        path: ./package/out/quarto-${{needs.configure.outputs.version}}-macos.pkg
        
  publish-release:
    if: ${{ github.event.inputs.publish-release == 'true' }}
    runs-on: ubuntu-latest   
    needs: [configure, make-installer-deb, make-installer-win, make-installer-mac]

    steps:
    - name: Download Artifacts
      uses: actions/download-artifact@v2       
        
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
      with:
        tag_name: ${{needs.configure.outputs.tag_name}}
        release_name: ${{needs.configure.outputs.release}}
        body: |
          ${{ needs.configure.outputs.changes }}
        draft: ${{ github.event.inputs.draft }}
        prerelease: ${{ github.event.inputs.pre-release }}
        
    - name: Attach Debian Installer
      id: attach-deb-installer
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} 
        asset_path: ./Deb Installer/quarto-${{needs.configure.outputs.version}}-amd64.deb
        asset_name: quarto-${{needs.configure.outputs.version}}-amd64.deb
        asset_content_type: application/deb

    - name: Attach Windows Installer
      id: attach-win-installer
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} 
        asset_path: ./Windows Installer/quarto-${{needs.configure.outputs.version}}-win.msi
        asset_name: quarto-${{needs.configure.outputs.version}}-win.msi
        asset_content_type: application/msi

    - name: Attach Mac Installer
      id: attach-mac-installer
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} 
        asset_path: ./Mac Installer/quarto-${{needs.configure.outputs.version}}-macos.pkg
        asset_name: quarto-${{needs.configure.outputs.version}}-macos.pkg
        asset_content_type: application/pkg
        
        
              
        

