

- Implement latex environment divs: https://bookdown.org/yihui/rmarkdown-cookbook/custom-blocks.html

- We don't seem to be able to render latex quite the same way that knitr does,
e.g.:
library(flextable)
ft <- flextable(head(mtcars))
ft <- autofit(ft)
ft
- Why did Beamer fail to render w/ missing caption package w/ our pipeline but work for pandoc pdflatex?


- Generally, validity of labels (don't want under the hood transformations to 
  affect addressabilty)

- Should we convert include-in-header to header-includes (or vice versa) to eliminate the conflict
  (command line options overwrite metadata options)
- see http://lierdakil.github.io/pandoc-crossref/#latex-output-and---include-in-header
- Injected HTML in meta.lua gets overridden whenever we use include-in-header in the
defaults file (e.g. for  htmlwidgets). Use temp file?

- Figures filter:
    - Forwarding of fig chunk options to data attributes (and HTML/LaTeX generation)
    - figures filter should run after the crossref filter, and
      should be responsible for converting e.g. htmlwidgets
      marked as figures to <figure>

- Consider multiple tables in single environment?

- allow _quarto config directory that merges all contained files
  (lock file will go there as well)

Port tinytex to JS; OR we need to implmeent various auto-install behaviors for latexmk, eg.
  had to do this to get biblatex working w/ latexmk
  (may want to automate installation if no biber + auto-map TinyTeX to path)
    tlmgr install biblatex
    tlmgr install biber
    ln -sf /Users/jjallaire/Library/TinyTeX/bin/x86_64-darwin/biber /usr/local/bin/biber
Note need to implement tinytex: false and tinytex options (e.g. min-runs, clean, output-dir, etc.)

Basic docs (could even be private)
 
Installer




- Create and publish R, Python, and Julia packages 


# Package/extension system

Port a dozen or rticles formats
# markdown for bootstrap concepts/constructs
# standalone document formats
bs4-notebook
bs4-article

Lua sandbox: https://stackoverflow.com/questions/1224708/how-can-i-create-a-secure-lua-sandbox



Project system:
  - See MkDocs: https://docs.google.com/document/d/16Lp39BolpTR0NzbQQ6ebr9bawYth8EeivBo0q4qapVY/edit#heading=h.ibf8kici39py
  - Terminate at _quarto.yml w/ project: true
    (need to first determine if there is a project somewhere in the parent tree,
     if there is, then use this behavior, if not, use the first match)
  - External interactions with projects (output_dir, clean, etc.)
  - bs4-website
  - bs4-book


- Macros
  
  {{ pagebreak }}

  {{= print("x") }}

  {{< figure projections.xlsx#chunk-label caption="asfdasdf" label="myplot" >}}

  {{< table projections.xlsx#fy-2019 label="projections" label="">}}

  {{< text notebook.Rmd##chunk-label >}}

  {{< tweet https://twitter.com/foo/status/34453323455 >}}

  {{< video https://youtube.com/foo/status/34453323455 >}}


- RStudio IDE Visual Editor for quarto
    - crossref system
    - project hooks (crossref indexing, build, etc.)
    - publishing hooks for RSC
    - jupyter front-end


- Visual Studio Code 
    - visual editor extension
    - quarto publishing workflow (preview, etc.)


<< write tests >>

https://github.com/microsoft/vscode-jupyter
https://devblogs.microsoft.com/python/introducing-the-jupyter-extension-for-vs-code/



Extracate the cache dir logic from rmarkdown::render and call that

Merge -M and --metadata-file with _quarto.yml and in-file YAML with same
semantics as Pandoc

discover index.Rmd or ui.Rmd for quarto run. can't rely on
rmarkdown::run b/c we need to figure out which Rmd to render

Meta-concepts on top of AST: e.g. tabs



