
Tables
------------------------------------


- consider not using tables for docx layouts (perhaps text frames)

- Non tbl and fig sub-panels may want to get "default" alignment 
(e.g. heading w/ bullet list left aligned)

- Move tbl.cap in computation layer to the bottom of the table div


TODO:

This does not work in quarto:
```{r}
knitr::kable(
  list(
    head(iris[, 1:2], 3),
    head(mtcars[, 1:3], 5)
  ),
  caption = 'A Tale of Two Tables.', booktabs = TRUE
)
```


We don't get the .md file when there is tex error (b/c copying happens at the end)



Quarto
---------------------------

- Consider yaml for chunk options

- Investigate pandoc 2.11.3 support for ODT cross references

- Consider lst.display="details" to indicate you want the code in <details>. Wrap source in details w/ summary from fig.cap
  (may need some JavaScript to expand <details> on clicking cross reference). Could also make available a show all / hide all
  function that templates could call.

- Support fig.cap on figure divs (auto-inject the caption based on fig.cap)

- If we use pandoc div syntax in a file with jupytext: formats: md,ipynb then we get auto-detected as pandoc markdown
  md:markdown is what we need, however it seems like we might also need the kernelspec stuff or other stuff 
  when we do this.

- Generally, validity of labels (don't want under the hood transformations to 
  affect addressabilty)

- Authors metadata standard 

- Should we convert include-in-header to header-includes (or vice versa) to eliminate the conflict
- also convert top level header-includes, etc.
  (command line options overwrite metadata options)
- knit_meta for latex packages? Could use this immedidately for animate
- see http://lierdakil.github.io/pandoc-crossref/#latex-output-and---include-in-header
- Injected HTML in meta.lua gets overridden whenever we use include-in-header in the
defaults file (e.g. for  htmlwidgets). Use temp file?

- Jupyter performance / kernel startup time
  Tornado has no dependencies and supports autoreload:
      https://www.tornadoweb.org/en/stable/autoreload.html 
      may be able to do this (where the script auto kills the server): python -m tornado.autoreload tornado/test/runtests.py
  https://github.com/mgedmin/findimports


Project system:
  - allow _quarto config directory that merges all contained files
    (lock file will go there as well)
  - See MkDocs: https://docs.google.com/document/d/16Lp39BolpTR0NzbQQ6ebr9bawYth8EeivBo0q4qapVY/edit#heading=h.ibf8kici39py
  - Terminate at _quarto.yml w/ project: true
    (need to first determine if there is a project somewhere in the parent tree,
     if there is, then use this behavior, if not, use the first match)
  - External interactions with projects (output_dir, clean, etc.)
  - website / book format variations

  
LaTeX
---------------------------

- We don't seem to be able to render latex quite the same way that knitr does,
e.g.:
library(flextable)
ft <- flextable(head(mtcars))
ft <- autofit(ft)
ft
- Why did Beamer fail to render w/ missing caption package w/ our pipeline but work for pandoc pdflatex?

Port tinytex to JS; OR we need to implmeent various auto-install behaviors for latexmk, eg.
  had to do this to get biblatex working w/ latexmk
  (may want to automate installation if no biber + auto-map TinyTeX to path)
    tlmgr install biblatex
    tlmgr install biber
    ln -sf /Users/jjallaire/Library/TinyTeX/bin/x86_64-darwin/biber /usr/local/bin/biber
Note need to implement tinytex: false and tinytex options (e.g. min-runs, clean, output-dir, etc.)


v0.1
-----------------------------------------

- Basic docs (could even be private)
 
- Installer

Pandoc-powered academic, scientific, and technical publishing. Quarto is pandoc plus:
1) Integrated output from R, Python, and Julia via seamless integration with knitr and Jupyter
2) Ciations via pandoc citeproc
3) Cross references for figures, tables, equations, sections, listings, proofs, and more.
4) Sophisticated figure layout
5) Long form publishing (websites, books, manuscripts, etc.)


Future
-----------------------------------------

# Package/extension system

A 'format' is a director or zip file which is:
  - Located in the _quarto directory
  - Format YAML (must declare base)
  - Arbitrary other files that can be referenced (relatively) by the format YAML

Port a dozen or rticles formats
# markdown for bootstrap concepts/constructs
# standalone document formats
bs4-notebook
bs4-article
bs4-website
bs4-book


Lua sandbox: https://stackoverflow.com/questions/1224708/how-can-i-create-a-secure-lua-sandbox



- Macros
  
  {{ pagebreak }}

  {{= print("x") }}

  {{< figure projections.xlsx#chunk-label caption="asfdasdf" label="myplot" >}}

  {{< table projections.xlsx#fy-2019 label="projections" label="">}}

  {{< text notebook.Rmd##chunk-label >}}

  {{< tweet https://twitter.com/foo/status/34453323455 >}}

  {{< video https://youtube.com/foo/status/34453323455 >}}


- RStudio IDE Visual Editor for quarto
    - crossref system
    - project hooks (crossref indexing, build, etc.)
    - publishing hooks for RSC
    - jupyter front-end


- Visual Studio Code 
    - visual editor extension
    - quarto publishing workflow (preview, etc.)


<< write tests >>

https://github.com/microsoft/vscode-jupyter
https://devblogs.microsoft.com/python/introducing-the-jupyter-extension-for-vs-code/


Cleanup
--------------------------------------------

Extracate the cache dir logic from rmarkdown::render and call that

Merge -M and --metadata-file with _quarto.yml and in-file YAML with same
semantics as Pandoc

discover index.Rmd or ui.Rmd for quarto run. can't rely on
rmarkdown::run b/c we need to figure out which Rmd to render

Meta-concepts on top of AST: e.g. tabs




Latex Stuff
---------------------------------------------------


https://jdhao.github.io/2020/03/07/latex_figure_table_side_by_side_en/

Use minipage (with \begin{figure} or a custom float) for pure layout
Use subfig (subfloat) for widely compatible figure layout (controlling width via includegraphics)
Use subcaption for nicer but less compatible figure layout (controlling width via includegraphics)

Side by side tables appear to have no width capability (layout needs to "work").
We *can* do sized tables via minipage/subcaption:
https://tex.stackexchange.com/questions/2832/how-can-i-have-two-tables-side-by-side (note use of %)

Note use % in between subfigures or mini pages to indicate "no space" so stay on same line

Could % work with plain tabular?

Consider width=0.9\linewidth for included graphics to provide some spacing?



latex subfloat control width

latex minipage control width

\usepackage{subfig}


## subfig package (compatible)
   - Section 4.2 (create custom subfloats)
   - 

subfig package
\subfloat[<caption><label>] {


}

## subcaption package

\begin{figure}
\minipage 
  \subcaption


## Pure layout:

\begin{figure}
\minipage


Perhaps we could get tables with subcaptions working with just minipage, caption:

\documentclass{article}
\usepackage{graphicx}
\usepackage{subfig}
\usepackage[capitalize]{cleveref}

\begin{document}

We show two images \cref{fig:sub1} and \cref{fig:sub2} below.

\begin{figure}[h]
    \centering
    \begin{minipage}[t]{.5\textwidth}
        \centering
        \includegraphics[width=0.9\linewidth]{cat1.jpeg}
        \caption{caption 1}
        \label{fig:sub1}
    \end{minipage}%
    \begin{minipage}[t]{.5\textwidth}
        \centering
        \includegraphics[width=0.9\linewidth]{cat2.jpeg}
        \caption{caption 2}
        \label{fig:sub2}
    \end{minipage}
\end{figure}

\end{document}

https://en.wikibooks.org/wiki/LaTeX/Floats,_Figures_and_Captions#Custom_floats





- Consider multiple tables in single environment? 
  https://www.overleaf.com/learn/latex/How_to_Write_a_Thesis_in_LaTeX_(Part_3):_Figures,_Subfigures_and_Tables#Subtables

- knitr uses subfloat (would want this via the subfig package)

http://ctan.math.utah.edu/ctan/tex-archive/macros/latex/contrib/subfig/subfig.pdf (compat w/ journals referenced below)

See minipage as alternative! (subcaption can work w/ that)
for pure layout, we may just want an uncaptioned figure w/ embedded minipage

From: 
https://en.wikibooks.org/wiki/LaTeX/Floats,_Figures_and_Captions#Subfloats
A useful extension is the subcaption[6] package, which uses subfloats within a single float. The subfig package 
(subfigure package is deprecated[5]) is a useful alternative when used in-conjunction with LaTeX templates (i.e. 
templates for journals from Springer and IOP, IEEETran and ACM SIG) that are not compatible with subcaption. 
These packages give the author the ability to have subfigures within figures, or subtables within table floats. 
Subfloats have their own caption, and an optional global caption. An example will best illustrate the usage of 
the subcaption package:

Also see (figure spacing):
Horizontal spaces between figures are controlled by one of several commands, which are placed in between \begin{subfigure} and \end{subfigure}:
A non-breaking space (specified by ~ as in the example above) can be used to insert a space in between the subfigs.
Math spaces: \qquad, \quad, \;, and \,
Generic space: \hspace{''length''}
Automatically expanding/contracting space: \hfill

