- name: from
  alias: reader
  schema: string
  default: markdown
  description:
    short: "Format to read from"
    long: |
      Format to read from. Extensions can be individually enabled or disabled by appending +EXTENSION or -EXTENSION to the format name (e.g. markdown+emoji).

- name: to
  alias: writer
  schema: string
  default: html
  hidden: true
  description:
    short: "Format to write to (e.g. html)"
    long: |
      Format to write to. Extensions can be individually enabled or disabled by appending +EXTENSION or -EXTENSION to the format name (e.g. gfm+footnotes)

- name: output-file
  schema:
    oneOf:
      - string
      - "null":
          hidden: true
  default: "Input filename with output extension (e.g. .pdf, .html, etc.)"
  description: "Output file to write to"

- name: input-file
  schema: string
  hidden: true
  description: "Input file to read from"

- name: input-files
  schema:
    arrayOf: string
  hidden: true
  description: "Input files to read from"

- name: defaults
  schema:
    arrayOf: string
  hidden: true
  description: "Include options from the specified defaults files"

- name: template
  disabled: [pptx, docx]
  description: |
    Use the specified file as a custom template for the generated document.

- name: standalone
  schema: boolean
  default: true
  description: |
    Produce output with an appropriate header and footer (e.g. a standalone HTML, LaTeX, TEI, or RTF file, not a fragment)"

- name: self-contained
  enabled: [html, html4, html5, slidy, slideous, s5, revealjs, dzslides]
  schema: boolean
  default: false
  description:
    short: "Produce a standalone HTML file with no external dependencies"
    long: |
      Produce a standalone HTML file with no external dependencies, using
      `data:` URIs to incorporate the contents of linked scripts, stylesheets,
      images, and videos. The resulting file should be
      "self-contained," in the sense that it needs no external files and no net
      access to be displayed properly by a browser. This option works only with
      HTML output formats, including `html4`, `html5`, `html+lhs`, `html5+lhs`,
      `s5`, `slidy`, `slideous`, `dzslides`, and `revealjs`. Scripts, images,
      and stylesheets at absolute URLs will be downloaded; those at relative
      URLs will be sought relative to the working directory (if the first source
      file is local) or relative to the base URL (if the first source
      file is remote).  Elements with the attribute
      `data-external="1"` will be left alone; the documents they
      link to will not be incorporated in the document.

- name: variables
  schema: object
  hidden: true
  description: "Pandoc metadata variables"

- name: metadata
  schema: object
  hidden: true
  description: "Pandoc metadata variables"

- name: metadata-file
  schema: string
  description:
    short: "Include file with YAML metadata"
    long: |
      Read metadata from the supplied YAML (or JSON) file. This
      option can be used with every input format, but string scalars
      in the YAML file will always be parsed as Markdown. Generally,
      the input will be handled the same as in YAML metadata blocks.
      Metadata values specified inside the document, or by using `-M`, 
      overwrite values specified with this option.

- name: metadata-files
  schema:
    arrayOf: string
  description:
    short: "Include files with YAML metadata"
    long: |
      Read metadata from the supplied YAML (or JSON) files. This
      option can be used with every input format, but string scalars
      in the YAML file will always be parsed as Markdown. Generally,
      the input will be handled the same as in YAML metadata blocks.
      Values in files specified later in the list will be preferred
      over those specified earlier. Metadata values specified inside 
      the document, or by using `-M`, overwrite values specified with
      this option.

- name: include-before-body
  disabled: [pptx, docx]
  schema:
    maybeArrayOf: string
  description: |
    Include contents of files, verbatim, at the beginning of the document body
    (e.g. after the `<body>` tag in HTML, or the `\begin{document}` command 
    in LaTeX).

- name: include-after-body
  disabled: [pptx, docx]
  schema:
    maybeArrayOf: string
  description: |
    Include contents of files, verbatim, at the end of the document body (before
    the `</body>` tag in HTML, or the `\end{document}` command in LaTeX).

- name: include-in-header
  disabled: [pptx, docx]
  schema:
    maybeArrayOf: string
  description: |
    Include contents of files, verbatim, at the end of the header. This can
    be used, for example, to include special CSS or JavaScript in HTML 
    documents.

- name: resource-path
  schema: string
  default: "."
  description: |
    List of paths to search for images and other resources. The paths should
    be separated by : on Linux, UNIX, and macOS systems, and by ; on Windows.

- name: citeproc
  schema: boolean
  default: true
  description:
    short: "Turn on built-in citation processing"
    long: |
      Turn on built-in citation processing. To use this feature, you will need
      to have a document containing citations and a source of bibliographic data: 
      either an external bibliography file or a list of `references` in the 
      document's YAML metadata. You can optionally also include a `csl` 
      citation style file.

- name: csl
  schama: string
  description: Citation Style Language file to use for formatting references.

- name: citation-abbreviations
  schema: string
  description: |
    JSON file containing abbreviations of journals that should be
    used in formatted bibliographies when `form="short"` is
    specified. The format of the file can be illustrated with an
    example:
    ```json
    { "default": {
        "container-title": {
                "Lloyd's Law Reports": "Lloyd's Rep",
                "Estates Gazette": "EG",
                "Scots Law Times": "SLT"
        }
      }
    }
    ```

- name: bibliography
  schema:
    maybeArrayOf: string
  description: |
    Document bibliography (BibTeX or CSL). May be a single file or a list of files

- name: filters
  schema:
    arrayOf:
      oneOf:
        - string
        - object:
            properties:
              type: string
              path: string
            required: [type, path]
        - object:
            properties:
              type:
                enum: citeproc
            required: [type]
  description: |
    Specify executables or Lua scripts to be used as a filter transforming
    the pandoc AST after the input is parsed and before the output is written.

- name: file-scope
  schema: boolean
  hidden: true
  default: false
  description: "Parse each file individually before combining for multifile documents."

- name: data-dir
  schema: string
  hidden: true
  description: "Specify the user data directory to search for pandoc data files."

- name: verbosity
  schema:
    enum: [ERROR, WARNING, INFO]
  default: WARNING
  description: "Level of program output (provide INFO for diagnostics)"

- name: log-file
  schema: string
  description: "Write log messages in machine-readable JSON format to FILE."

- name: cite-method
  enabled: [latex, pdf, beamer]
  schema:
    enum: [citeproc, natbib, biblatex]
  default: citeproc
  description: |
    Method used to format citations.

- name: top-level-division
  enabled: [latex, pdf, beamer, context, docbook, docbook4, docbook5, tei]
  schema:
    enum: [default, section, chapter, part]
  description:
    short: |
      Treat top-level headings as the given division type. The hierarchy
      order is part, chapter, then section; all headings are shifted such 
      that the top-level heading becomes the specified type.
    long: |
      Treat top-level headings as the given division type. The hierarchy
      order is part, chapter, then section; all headings are shifted such 
      that the top-level heading becomes the specified type.  

      The default behavior is to determine the
      best division type via heuristics: unless other conditions
      apply, `section` is chosen. When the `documentclass`
      variable is set to `report`, `book`, or `memoir` (unless the
      `article` option is specified), `chapter` is implied as the
      setting for this option. If `beamer` is the output format,
      specifying either `chapter` or `part` will cause top-level
      headings to become `\part{..}`, while second-level headings
      remain as their default type.

- name: abbreviations
  schema: string
  description:
    short: |
      Specifies a custom abbreviations file, with abbreviations one to a line.
    long: |
      Specifies a custom abbreviations file, with abbreviations one to a line.
      This list is used when reading Markdown input: strings found in this list
      will be followed by a nonbreaking space, and the period will not produce sentence-ending space in formats like LaTeX.  The strings may not contain
      spaces.

- name: pdf-engine
  enabled: [latex, pdf, beamer, ms, context, html, html4, html5]
  schema:
    string:
      completions: 
        - pdflatex
        - lualatex
        - xelatex
        - latexmk
        - tectonic
        - wkhtmltopdf
        - weasyprint
        - prince
        - context
        - pdfroff
   description: 
    short: "Use the specified engine when producing PDF output."
    long: |
      Use the specified engine when producing PDF output. If the engine is not
      in your PATH, the full path of the engine may be specified here. If this
      option is not specified, pandoc uses the following defaults
      depending on the output format in use:
      - `latex`: `pdflatex` (other options: `xelatex`, `lualatex`,
        `tectonic`, `latexmk`)
      - `context`: `context`
      - `html`:  `wkhtmltopdf` (other options: `prince`, `weasyprint`;
        see [print-css.rocks](https://print-css.rocks) for a good
        introduction to PDF generation from HTML/CSS.)
      - `ms`:  `pdfroff`

- name: pdf-engine-opt
  enabled: [latex, pdf, beamer, ms, context, html, html4, html5]
  schema: string
  description:
    short: "Use the given string as a command-line argument to the `pdf-engine`."
    long: |
      Use the given string as a command-line argument to the pdf-engine.
      For example, to use a persistent directory foo for latexmk’s auxiliary
      files, use `pdf-engine-opt: -outdir=foo`. Note that no check for 
      duplicate options is done.

- name: wrap
  disabled: [latex, pdf, beamer, pptx, docx, odt, html, html4, html5, slidy, slideous, s5, revealjs, dzslides, epub, epub2, epub3, docbook, docbook4, docbook5]
  schema: 
    enum: [auto, none, preserve]
  default: auto
  description: 
    short: "Determine how text is wrapped in the output."
    long: |
      Determine how text is wrapped in the output (the source code, not the rendered
      version). With `auto` (the default), pandoc will attempt to wrap lines to the column
      width specified by `columns` (default 72). With `none`, pandoc will not wrap lines at
      all. With `preserve`, pandoc will attempt to preserve the wrapping from the source
      document (that is, where there are nonsemantic newlines in the source, there will be
      nonsemantic newlines in the output as well

- name: columns
  disabled: [latex, pdf, beamer, pptx, docx, odt, html, html4, html5, slidy, slideous, s5, revealjs, dzslides, epub, epub2, epub3, docbook, docbook4, docbook5]
  schema: number
  description:
    short: Specify length of lines in characters.
    long: |
      Specify length of lines in characters. This affects text wrapping in generated source
      code (see `wrap`). It also affects calculation of column widths for plain text
      tables. 

- name: dpi
  schema: number
  default: 96
  description:
    short: |
      Specify the default dpi (dots per inch) value for conversion from pixels to inch/
      centimeters and vice versa.
    long: |
      Specify the default dpi (dots per inch) value for conversion from pixels to inch/
      centimeters and vice versa. (Technically, the correct term would be ppi: pixels per
      inch.) The default is `96`. When images contain information about dpi internally, the
      encoded value is used instead of the default specified by this option.

- name: extract-media
  schema: string
  description:
    short: |
      Extract images and other media contained in or linked from the source document to the
      path DIR.
    long: |
      Extract images and other media contained in or linked from the source document to the
      path DIR, creating it if necessary, and adjust the images references in the document
      so they point to the extracted files. Media are downloaded, read from the file
      system, or extracted from a binary container (e.g. docx), as needed. The original
      file paths are used if they are relative paths not containing ... Otherwise filenames
      are constructed from the SHA1 hash of the contents.

- name: toc
  alias: table-of-contents
  disabled: [man, docbook, docbook4, docbook5, or jats]
  schema: boolean
  description: 
    short: "Include an automatically generated table of contents"
    long: |
      Include an automatically generated table of contents (or, in
      the case of `latex`, `context`, `docx`, `odt`,
      `opendocument`, `rst`, or `ms`, an instruction to create
      one) in the output document. This option has no effect
      if `standalone` is `false`.

      Note that if you are producing a PDF via `ms`, the table
      of contents will appear at the beginning of the
      document, before the title.  If you would prefer it to
      be at the end of the document, use the option
      `pdf-engine-opt: --no-toc-relocation`.

- name: toc-depth
  disabled: [man, docbook, docbook4, docbook5, or jats]
  schema: number
  description: | 
    Specify the number of section levels to include in the table of contents.
    The default is 3
      
- name: number-sections
  schema: boolean
  default: false
  description: 
    short: "Number section headings"
    long: |
      Number section headings rendered ouptut. By default, sections are not numbered.
      Sections with class `.unnumbered` will never be numbered, even if `number-sections`
      is specified.



- name: number-offset
  schema:
    arrayOf: number
  default: [0, 0, 0, 0, 0, 0]
  description:
    short: Offset for section headings in output (offsets are 0 by default)
    long: |
      Offset for section headings in output (offsets are 0 by default)
      The first number is added to the section number for
      top-level headings, the second for second-level headings, and so on.
      So, for example, if you want the first top-level heading in your
      document to be numbered "6", specify `number-offset: 5`. If your
      document starts with a level-2 heading which you want to be numbered
      "1.5", specify `number-offset: [1,4]`. Implies `number-sections`

- name: html-math-method
  enabled:
    [
      html,
      html4,
      html5,
      slidy,
      slideous,
      s5,
      revealjs,
      dzslides,
      epub,
      epub2,
      epub3,
    ]
  schema:
    oneOf:
      enum:
        id: math-methods
        values: [plain, webtex, gladtex, mathml, mathjax, katex]
      object:
        properties:
          method:
            ref: math-methods
          url: string
        required: [method]

- name: track-changes
  enabled: [docx]
  schema:
    enum: [accept, reject, all]
  default: accept
  description:
    short: |
      Specifies what to do with insertions, deletions, and comments produced by 
      the MS Word “Track Changes” feature.
    long: |
      Specifies what to do with insertions, deletions, and comments
      produced by the MS Word "Track Changes" feature.  `accept` (the
      default) processes all the insertions and deletions.
      `reject` ignores them.  Both `accept` and `reject` ignore comments.
      `all` includes all insertions, deletions, and comments, wrapped
      in spans with `insertion`, `deletion`, `comment-start`, and
      `comment-end` classes, respectively. The author and time of
      change is included. `all` is useful for scripting: only
      accepting changes from a certain reviewer, say, or before a
      certain date. If a paragraph is inserted or deleted,
      `track-changes=all` produces a span with the class
      `paragraph-insertion`/`paragraph-deletion` before the
      affected paragraph break. This option only affects the docx
      reader.

- name: request-headers
  schema:
    arrayOf:
      arrayOf:
        schema: string
        length: 2
  description: "Headers to include with HTTP requests by Pandoc"
